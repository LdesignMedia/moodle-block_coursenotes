define("block_coursenotes/coursenotes",["exports","core/ajax","core/log"],(function(_exports,_ajax,_log){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_log=_interopRequireDefault(_log);_exports.init=()=>{let noteHistory=[];const courseNoteExists=""!==document.getElementById("coursenote-display").textContent.trim(),textarea=document.getElementById("coursenote-textarea");let timeoutId;courseNoteExists&&(document.getElementById("coursenote-form").style.display="none"),document.getElementById("edit-icon").addEventListener("click",(function(){document.getElementById("coursenote-display").style.display="none",this.style.display="none",document.getElementById("coursenote-form").style.display="block",fetchNoteHistory()})),document.getElementById("cancel-button").addEventListener("click",(function(){document.getElementById("coursenote-display").style.display="block",document.getElementById("edit-icon").style.display="block",document.getElementById("coursenote-form").style.display="none"})),document.getElementById("undo-button").addEventListener("click",(function(){if(noteHistory.length>1){noteHistory.pop();const lastNote=noteHistory[noteHistory.length-1];document.getElementById("coursenote-textarea").value=lastNote,noteHistory.length<=1&&(this.style.display="none")}}));const courseId=textarea.dataset.courseid;textarea.addEventListener("input",(()=>{clearTimeout(timeoutId),textarea.value.length>10&&(timeoutId=setTimeout((()=>{saveNoteAJAX(textarea.value)}),1e4))}));const saveNoteAJAX=note=>{let formattedNote;formattedNote=stripHtmlTags(note),_ajax.default.call([{methodname:"block_coursenotes_save_note",args:{coursenote:formattedNote,courseid:courseId},done:response=>{response.status?(noteHistory.push(note),noteHistory.shift(),_log.default.log("Note saved successfully")):_log.default.log("Error saving note:",response.message)},fail:error=>{_log.default.error("AJAX error: "+JSON.stringify(error))}}])},stripHtmlTags=str=>str.replace(/<\/?[^>]+(>|$)/g,""),fetchNoteHistory=()=>{_ajax.default.call([{methodname:"block_coursenotes_fetch_notes",args:{courseid:courseId},done:response=>{response.status?(noteHistory=response.notes,response.note_count>1?document.getElementById("undo-button").style.display="block":document.getElementById("undo-button").style.display="none",_log.default.log("Note history fetched successfully")):_log.default.log("Error fetching note history:",response.message)},fail:error=>{_log.default.error("AJAX error: "+JSON.stringify(error))}}])}}}));

//# sourceMappingURL=coursenotes.min.js.map