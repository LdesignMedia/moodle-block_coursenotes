{"version":3,"file":"coursenotes.min.js","sources":["../src/coursenotes.js"],"sourcesContent":["import Ajax from 'core/ajax';\nimport Log from 'core/log';\n\nexport const init = () => {\n    const courseNoteExists = document.getElementById('coursenote-display').textContent.trim() !== '';\n\n    // Hide form if course note exists.\n    if (courseNoteExists) {\n        document.getElementById('coursenote-form').style.display = 'none';\n    }\n\n    document.getElementById('edit-icon').addEventListener('click', function () {\n        document.getElementById('coursenote-display').style.display = 'none';\n        this.style.display = 'none'; // Hide the edit icon itself.\n        document.getElementById('coursenote-form').style.display = 'block';\n    });\n\n    document.getElementById('cancel-button').addEventListener('click', function () {\n        document.getElementById('coursenote-display').style.display = 'block';\n        document.getElementById('edit-icon').style.display = 'block'; // Show the edit icon again.\n        document.getElementById('coursenote-form').style.display = 'none';\n    });\n\n    const textarea = document.getElementById('coursenote-textarea');\n    let timeoutId;\n    // Fetch the block instance ID from the DOM.\n    const blockInstanceId = textarea.dataset.blockinstanceid;\n    const courseId = textarea.dataset.courseid;\n\n    textarea.addEventListener('input', () => {\n        clearTimeout(timeoutId);\n\n        if (textarea.value.length > 10) {\n            timeoutId = setTimeout(() => {\n                saveNoteAJAX(textarea.value);\n            }, 10000);\n        }\n    });\n\n    const saveNoteAJAX = (note) => {\n        Ajax.call([{\n            methodname: 'block_coursenotes_save_note',\n            args: {\n                coursenote: note,\n                blockinstanceid: blockInstanceId, // Pass the block instance ID.\n                courseid: courseId // Pass the course ID.\n            },\n            done: (response) => {\n                if (response.status) {\n                    Log.log('Note saved successfully');\n                } else {\n                    Log.log('Error saving note:', response.message);\n                }\n            },\n            fail: (error) => {\n                Log.error('AJAX error: ' + JSON.stringify(error));\n            }\n        }]);\n    };\n};\n"],"names":["document","getElementById","textContent","trim","style","display","addEventListener","textarea","timeoutId","blockInstanceId","dataset","blockinstanceid","courseId","courseid","clearTimeout","value","length","setTimeout","saveNoteAJAX","note","call","methodname","args","coursenote","done","response","status","log","message","fail","error","JSON","stringify"],"mappings":"4VAGoB,KAC8E,KAArEA,SAASC,eAAe,sBAAsBC,YAAYC,SAI/EH,SAASC,eAAe,mBAAmBG,MAAMC,QAAU,QAG/DL,SAASC,eAAe,aAAaK,iBAAiB,SAAS,WAC3DN,SAASC,eAAe,sBAAsBG,MAAMC,QAAU,YACzDD,MAAMC,QAAU,OACrBL,SAASC,eAAe,mBAAmBG,MAAMC,QAAU,WAG/DL,SAASC,eAAe,iBAAiBK,iBAAiB,SAAS,WAC/DN,SAASC,eAAe,sBAAsBG,MAAMC,QAAU,QAC9DL,SAASC,eAAe,aAAaG,MAAMC,QAAU,QACrDL,SAASC,eAAe,mBAAmBG,MAAMC,QAAU,gBAGzDE,SAAWP,SAASC,eAAe,2BACrCO,gBAEEC,gBAAkBF,SAASG,QAAQC,gBACnCC,SAAWL,SAASG,QAAQG,SAElCN,SAASD,iBAAiB,SAAS,KAC/BQ,aAAaN,WAETD,SAASQ,MAAMC,OAAS,KACxBR,UAAYS,YAAW,KACnBC,aAAaX,SAASQ,SACvB,eAILG,aAAgBC,qBACbC,KAAK,CAAC,CACPC,WAAY,8BACZC,KAAM,CACFC,WAAYJ,KACZR,gBAAiBF,gBACjBI,SAAUD,UAEdY,KAAOC,WACCA,SAASC,oBACLC,IAAI,wCAEJA,IAAI,qBAAsBF,SAASG,UAG/CC,KAAOC,qBACCA,MAAM,eAAiBC,KAAKC,UAAUF"}